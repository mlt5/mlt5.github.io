WEBVTT
Kind: captions
Language: pt-BR

00:00:00.000 --> 00:00:03.754
Agora que você viu como a biblioteca
PCA funciona no scikit-learn

00:00:03.787 --> 00:00:06.706
e a ajustou ao conjunto de dados
de dígitos escritos à mão,

00:00:06.739 --> 00:00:09.300
vamos olhar mais de perto
para o que exatamente

00:00:09.333 --> 00:00:12.554
a PCA nos devolve e o que
as diferentes partes significam.

00:00:12.587 --> 00:00:15.394
Vamos continuar
de onde paramos no último vídeo.

00:00:15.427 --> 00:00:18.030
Aqui, eu já li
as bibliotecas necessárias

00:00:18.063 --> 00:00:20.983
e dividi os dados de imagem
em uma etiqueta e os recursos,

00:00:21.016 --> 00:00:22.795
que são os pixels
na própria imagem.

00:00:22.828 --> 00:00:24.804
Vamos olhar os 30 primeiros.

00:00:24.837 --> 00:00:28.054
Agora, usando a função do_PCA
que você viu antes,

00:00:28.087 --> 00:00:32.484
vamos criar o modelo PCA
e também o componente x_PCA.

00:00:33.106 --> 00:00:34.884
Se olharmos o modelo PCA,

00:00:34.917 --> 00:00:39.589
podemos usar ponto+tab para ver
várias coisas disponíveis nele.

00:00:39.623 --> 00:00:42.485
Algumas coisas
em que geralmente presto atenção são

00:00:42.518 --> 00:00:46.460
o explained_variance_ratio,
é geralmente bem útil,

00:00:46.493 --> 00:00:50.334
e o número de componentes,
o número de recursos.

00:00:50.368 --> 00:00:53.579
Se olhar para o seu modelo PCA
e colocar no ponto+tab,

00:00:53.612 --> 00:00:55.983
pode ver várias coisas
que estão disponíveis.

00:00:56.017 --> 00:00:59.545
Vamos ver o que algumas delas
fazem no nosso modelo.

00:00:59.578 --> 00:01:01.325
No notebook abaixo,

00:01:01.358 --> 00:01:03.710
vai ver que há
a função "Scree Plot".

00:01:03.743 --> 00:01:08.500
Ela insere a quantidade de variância
explicada em cada componente.

00:01:08.533 --> 00:01:10.234
Vamos ver como fica.

00:01:10.267 --> 00:01:12.715
Perceba que temos 15 barras,

00:01:12.748 --> 00:01:15.890
cada uma associada a um
de nossos componentes principais.

00:01:15.923 --> 00:01:20.250
Se lembrar, aqui em cima,
colocamos 15 componentes principais.

00:01:20.283 --> 00:01:24.109
Então a altura da barra é
a quantidade de variabilidade

00:01:24.142 --> 00:01:27.814
do conjunto de recursos original
que é explicada por esse componente.

00:01:27.847 --> 00:01:32.598
Para nosso primeiro componente,
6% da variabilidade disponível

00:01:32.632 --> 00:01:35.450
e todos os dados são explicados
por esse componente.

00:01:35.483 --> 00:01:37.325
Para o segundo componente,

00:01:37.358 --> 00:01:41.645
4,29% do total de variabilidade
é explicado pelo componente.

00:01:41.678 --> 00:01:43.424
E assim por diante.

00:01:43.457 --> 00:01:46.819
A quantidade total
de variabilidade explicada

00:01:46.852 --> 00:01:49.949
por todos os 15 do primeiro
componente é em torno de 35%,

00:01:49.983 --> 00:01:51.620
como pode ver por essa linha.

00:01:51.653 --> 00:01:56.008
Esses componentes principais podem
ajudar a entender quantos vai manter

00:01:56.041 --> 00:01:59.453
por causa do quanto a variância
nos dados originais é explicada.

00:01:59.486 --> 00:02:02.160
Essa é uma forma
de criar uma métrica

00:02:02.193 --> 00:02:04.023
para um algoritmo
não supervisionado.

00:02:04.482 --> 00:02:07.609
É uma forma de entender

00:02:07.642 --> 00:02:09.873
como o algoritmo não supervisionado
se sai

00:02:09.906 --> 00:02:12.368
ao prever o que está acontecendo
com seus dados.

00:02:12.871 --> 00:02:16.008
A outra coisa que devemos ver
é como esses componentes

00:02:16.041 --> 00:02:18.455
se relacionam
com as imagens originais.

00:02:18.846 --> 00:02:21.373
A próxima função que você
verá no notebook

00:02:21.406 --> 00:02:22.852
se chama "plot_component".

00:02:22.885 --> 00:02:26.732
O que ela faz é destacar
os pixels na imagem

00:02:26.765 --> 00:02:28.894
que são importantes
para cada componente.

00:02:28.927 --> 00:02:30.995
Se olharmos
para o primeiro componente,

00:02:31.028 --> 00:02:33.500
o componente 0,
usando essa função,

00:02:33.533 --> 00:02:37.544
podemos ver que provavelmente está
destacando o 0 do conjunto de dados.

00:02:37.577 --> 00:02:39.844
Se olharmos
para outros componentes,

00:02:39.877 --> 00:02:43.864
podemos ver que está destacando
outros padrões nas imagens

00:02:43.897 --> 00:02:48.400
que são relacionados
à diferença entre um e outro.

00:02:48.667 --> 00:02:52.800
Essencialmente, os pixels
amarelos brilhantes são pesados

00:02:52.833 --> 00:02:55.685
e os pixels azul-escuro
são mais leves,

00:02:55.718 --> 00:03:01.375
associados à importância dos pixels
para esse componente específico.

00:03:01.408 --> 00:03:05.470
Agora é sua vez.


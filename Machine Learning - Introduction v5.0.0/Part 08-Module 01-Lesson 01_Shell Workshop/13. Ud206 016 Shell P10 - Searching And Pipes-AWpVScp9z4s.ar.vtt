WEBVTT
Kind: captions
Language: ar

00:00:00.620 --> 00:00:03.229
الآن، يمكننا إجراء المزيد من
خلال الملفات ثم النظر
فيها فحسب،

00:00:03.229 --> 00:00:04.849
ونقلها، وحذفها.

00:00:04.849 --> 00:00:06.830
على سبيل المثال، دعونا
نأخذ ملف

00:00:06.830 --> 00:00:08.870
القاموس الذي قمت بتنزيله
سابقًا واستخدامه

00:00:08.869 --> 00:00:11.570
لمعرفة ما إذا كانت كلمة معينة
موجودة في القاموس أم
لا.

00:00:11.570 --> 00:00:13.339
هناك أمر Shell
يطلق عليه اسم grep

00:00:13.339 --> 00:00:15.560
يعرف كيفية البحث في
ملف نصي عن أسطر

00:00:15.560 --> 00:00:17.510
ذات محتويات محددة.

00:00:17.510 --> 00:00:19.790
فإذا أعطيته كلمة
مثل shell،

00:00:19.789 --> 00:00:23.230
واسم ملف
مثل dictionary.txt،

00:00:23.230 --> 00:00:26.330
فسيقرأ الملف
ويخرج جميع السطور

00:00:26.329 --> 00:00:28.069
التي تحتوي على هذه الكلمة.

00:00:28.070 --> 00:00:30.920
ولكن ماذا لو حدث في هذه الحالة،
أن كانت هناك العديد
من السطور

00:00:30.920 --> 00:00:32.570
التي لا يمكننا أن نراها في مرة واحدة.

00:00:32.570 --> 00:00:35.060
حسنًا، هناك شيء
يمكننا فعله وهو مطالبة

00:00:35.060 --> 00:00:39.560
Shell بإرسال ناتج
grep إلى الأمر الأقل.

00:00:39.560 --> 00:00:44.780
يمكنك فعل ذلك من خلال الحرف الأنبوبي
أو حرف الشريط
العمودي.

00:00:44.780 --> 00:00:46.289
ما الذي يحدث هنا؟

00:00:46.289 --> 00:00:49.640
حسنًا، يقرأ برنامج grep
ملف الإدخال

00:00:49.640 --> 00:00:52.160
ويطبع أي سطور
تطابق النمط.

00:00:52.159 --> 00:00:53.689
ولكن Shell
قد رتب الأشياء

00:00:53.689 --> 00:00:56.780
بحيث لا ينتقل الناتج مباشرة
إلى الطرف.

00:00:56.780 --> 00:00:59.929
وبدلًا من ذلك يتم إرساله
إلى البرنامج الأقل،

00:00:59.929 --> 00:01:02.149
الذي يعرض هذه السطور
لصفحة الطرف الواحدة

00:01:02.149 --> 00:01:03.350
في المرة الواحدة.

00:01:03.350 --> 00:01:05.120
لقراءة هذا الأمر
بصوت عالٍ، فإنك

00:01:05.120 --> 00:01:09.890
تقول grep لـ shell في
dictionary.txt ونقلها

00:01:09.890 --> 00:01:11.659
إلى الأقل.

00:01:11.659 --> 00:01:14.614
الآن، يمكن لـ grep أيضًا العمل على
الإدخال من برنامج
آخر.

00:01:18.519 --> 00:01:22.450
على سبيل المثال، يمكنك سحب
ملف من الويب باستخدام
cURL

00:01:22.450 --> 00:01:26.320
ثم إدراجها على الفور في grep
للحصول على نمط معين

00:01:26.319 --> 00:01:28.269
دون الحاجة إلى حفظه
إلى ملف أولًا.

00:01:30.959 --> 00:01:33.659
تتم تغذية الناتج
من أمر cURL

00:01:33.659 --> 00:01:36.810
هذا إلى أمر grep
كإدخال له،

00:01:36.810 --> 00:01:40.490
بدلًا من grep
بالقراءة من ملف.

00:01:40.489 --> 00:01:44.780
كما ترى، في بعض الأحيان
تختلط بعض نواتج cURL،

00:01:44.780 --> 00:01:47.540
مثل مقياس التقدم هذا،
مع بعض

00:01:47.540 --> 00:01:48.659
النواتج من grep--

00:01:48.659 --> 00:01:50.075
ولذلك قد يكون
هذا مربكًا نوعًا ما.

00:01:50.075 --> 00:01:52.570
إنها لا تختلط
بشكل فعلي إلى Shell،

00:01:52.569 --> 00:01:54.319
ولكنها تختلط
على الطرف.

00:01:54.319 --> 00:01:56.750
إذا أرسلنا هذا إلى
ملف، فسيكون هذا رائع.

00:01:56.750 --> 00:01:58.129
لن تختلط.

00:01:58.129 --> 00:02:00.829
والآن إذا كنت تريد معرفة
عدد التطابقات الموجودة،

00:02:00.829 --> 00:02:04.429
مثل عدد الكلمات الموجودة
التي تحتوي على سلسلة
fish،

00:02:04.430 --> 00:02:06.870
هناك بضعة طرق
مختلفة يمكنك استخدامها للقيام بذلك.

00:02:06.870 --> 00:02:09.469
تتمثل واحدة منها في نقل
ناتج grep

00:02:09.469 --> 00:02:13.129
إلى برنامج عدد
الكلمات، أو wc،

00:02:13.129 --> 00:02:16.689
ومطالبته بعد الأسطر
مع خيار الشرطة الصغيرة l.

00:02:16.689 --> 00:02:19.859
وهنا قد حصلنا على الرقم 105.

00:02:19.860 --> 00:02:26.010
هناك طريقة أخرى تتمثل في منح grep 
خيار الشرطة
الصغيرة c للعد.

00:02:26.009 --> 00:02:28.310
وكانت النتيجة نفس الرقم 105.


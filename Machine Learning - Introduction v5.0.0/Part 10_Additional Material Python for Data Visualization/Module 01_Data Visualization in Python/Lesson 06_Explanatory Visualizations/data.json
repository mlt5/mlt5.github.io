{
  "data": {
    "lesson": {
      "id": 571221,
      "key": "ffd7a28d-04d4-4c26-9e53-f2f3d85c4db7",
      "title": "Explanatory Visualizations",
      "semantic_type": "Lesson",
      "is_public": true,
      "version": "1.0.0",
      "locale": "en-us",
      "summary": "Previous lessons covered how you could use visualizations to learn about your data. In this lesson, see how to polish up those plots to convey your findings to others!",
      "lesson_type": "Classroom",
      "display_workspace_project_only": null,
      "resources": {
        "files": [
          {
            "name": "Videos Zip File",
            "uri": "https://zips.udacity-data.com/ffd7a28d-04d4-4c26-9e53-f2f3d85c4db7/571221/1544196787354/Explanatory+Visualizations+Videos.zip"
          },
          {
            "name": "Transcripts Zip File",
            "uri": "https://zips.udacity-data.com/ffd7a28d-04d4-4c26-9e53-f2f3d85c4db7/571221/1544196783825/Explanatory+Visualizations+Subtitles.zip"
          }
        ],
        "google_plus_link": null,
        "career_resource_center_link": null,
        "coaching_appointments_link": null,
        "office_hours_link": null,
        "aws_provisioning_link": null
      },
      "project": null,
      "lab": null,
      "concepts": [
        {
          "id": 578349,
          "key": "f5442431-2c2e-4eb2-8127-41930cd8161d",
          "title": "Introduction",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "f5442431-2c2e-4eb2-8127-41930cd8161d",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 578690,
              "key": "6145c55a-dd86-43fb-b89d-a098bcbc9cc1",
              "title": "L6 011 Intro V1",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "gLy8qpursJI",
                "china_cdn_id": "gLy8qpursJI.mp4"
              }
            }
          ]
        },
        {
          "id": 578682,
          "key": "5abc9451-790f-43c9-9b78-4dbc32a53ba1",
          "title": "Revisiting the Data Analysis Process",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "5abc9451-790f-43c9-9b78-4dbc32a53ba1",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 578712,
              "key": "30a74ad3-8c48-45a8-bc32-1ef140156c17",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Revisiting the Data Analysis Process\n\nAs a reminder, let's briefly review the data analysis process and revisit the way that exploratory and explanatory visualizations fit into different parts of that process. The five steps of the data analysis process are:\n\n1. **Extract** - Obtain the data from a spreadsheet, SQL, the web, etc.\n2. **Clean** - Here we could use expl**or**atory visuals.\n3. **Explore** - Here we use expl**or**atory visuals.\n4. **Analyze** - Here we might use either expl**or**atory or expl**an**atory visuals.\n5. **Share** - Here is where expl**an**atory visuals live.\n\nThe previous three lessons in the course have been focused on **exploratory analyses**. In phases with exploratory visualizations, the primary audience for the visuals will be you, the analyst. The plots that have been created and demonstrated haven't been particularly polished, just descriptive enough for you to gain insights into the data.\n\nThis lesson is focused on taking those insights and creating **explanatory analyses**. Here, your audience will be broader: your goal will be to convey your findings to other people who don't have the level of hands-on experience with the data as you. Visualizations under this banner should be focused on telling a specific story that you want to convey to that particular audience. Many times, these visualizations evolve from visuals created during the exploratory process, just polished up to highlight the specific intended insights. These highlights might change depending on the audience you're presenting to. You'll revisit those design concepts from earlier in the course to make your plots informative not just for yourself, but also compelling and understandable for others. ",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 384050,
          "key": "3fd15c2e-b849-4bec-9bd2-6551140b3612",
          "title": "Tell A Story",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "3fd15c2e-b849-4bec-9bd2-6551140b3612",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 418768,
              "key": "bea6425e-87bf-478d-a797-7c5888670bb5",
              "title": "Tell A Story",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "_IdOUEhjVGI",
                "china_cdn_id": "_IdOUEhjVGI.mp4"
              }
            },
            {
              "id": 390030,
              "key": "a7ac8a0e-923b-477f-adbf-6cf2a11c3c5e",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "Telling stories with data follows these steps:\n\n1. Start with a Question\n2. Repetition is a Good Thing\n3. Highlight the Answer\n4. Call Your Audience To Action\n\n",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 385079,
          "key": "6c3e8e9e-72f5-4384-9860-020d63b2e4c4",
          "title": "Same Data, Different Stories",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "6c3e8e9e-72f5-4384-9860-020d63b2e4c4",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": {
            "files": [
              {
                "name": "PDF of Same Data and Different Stories",
                "uri": "https://video.udacity-data.com/topher/2019/November/5dc4a7d3_two-stories-data-data/two-stories-data-data.pdf"
              }
            ],
            "google_plus_link": null,
            "career_resource_center_link": null,
            "coaching_appointments_link": null,
            "office_hours_link": null,
            "aws_provisioning_link": null
          },
          "atoms": [
            {
              "id": 418867,
              "key": "2f8c2d44-97f1-48b6-8a99-e993eb69c7ee",
              "title": "Same Data Different Stories",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "jSSnkz3QT5Y",
                "china_cdn_id": "jSSnkz3QT5Y.mp4"
              }
            },
            {
              "id": 390032,
              "key": "6404bffd-a8c7-4e1f-982d-024614113a86",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "### Don't forget this example the next time you need to present a finding in your data!\nDownload the data and visuals for this story using the button below or go to the Resources Tab in the upper leftmost panel of your classroom. There you can download an Excel spreadsheet. You can also access a Google sheet [here](https://docs.google.com/spreadsheets/d/1uBqNhkd360ihzh1JOgbU97LQZcq_usKA5fjtPwYcIng/edit#gid=0), note that if you are working from a corporate internet connection, please use the Resource tab file download. \n\n<center><a href=\"https://s3.amazonaws.com/video.udacity-data.com/topher/2018/September/5b9ad8af_two-stories-data/two-stories-data.xlsx\" target=\"_blank\"><button style=\"box-sizing: border-box; border-radius: 4px; background: #02B3E4; border: none; height: 44px; padding: 0 25px; color: white; cursor: pointer; font-family: Open Sans,sans-serif; display: inline-block; border: none; font-size: 12px; letter-spacing: 1px; font-weight: 600; text-transform: uppercase;\">Download Data</button></a></center>",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 390033,
          "key": "4b0330a0-7a43-4407-8dc2-b6af11c65bdd",
          "title": "Quizzes on Data Story Telling",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "4b0330a0-7a43-4407-8dc2-b6af11c65bdd",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": {
            "files": [
              {
                "name": "Quizzes Data - Sheet3",
                "uri": "https://video.udacity-data.com/topher/2019/June/5d14c36e_quizzes-data-sheet3/quizzes-data-sheet3.pdf"
              }
            ],
            "google_plus_link": null,
            "career_resource_center_link": null,
            "coaching_appointments_link": null,
            "office_hours_link": null,
            "aws_provisioning_link": null
          },
          "atoms": [
            {
              "id": 390039,
              "key": "184ff193-9580-4487-a4a0-a9f0926d25f2",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "### First Visual\n\nUse the first visual from the previous video to answer the following question.",
              "instructor_notes": ""
            },
            {
              "id": 390037,
              "key": "13859d2b-106b-4cea-8070-df3028acbd6a",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2017/September/59acaa33_screen-shot-2017-09-03-at-6.12.14-pm/screen-shot-2017-09-03-at-6.12.14-pm.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/13859d2b-106b-4cea-8070-df3028acbd6a",
              "caption": "",
              "alt": "",
              "width": 655,
              "height": 405,
              "instructor_notes": null
            },
            {
              "id": 390038,
              "key": "f3d06735-df73-4f54-9484-471dbb781754",
              "title": "",
              "semantic_type": "MatchingQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "f3d06735-df73-4f54-9484-471dbb781754",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "complex_prompt": {
                  "text": "For each of the visual elements below, mark whether or not you would \"Keep\" or \"Remove\" that element from the figure above."
                },
                "concepts_label": "Visual Element",
                "answers_label": "Keep or Remove",
                "concepts": [
                  {
                    "text": "3D aspect",
                    "correct_answer": {
                      "id": "a1504488480735",
                      "text": "Remove"
                    }
                  },
                  {
                    "text": "Legend",
                    "correct_answer": {
                      "id": "a1504488537166",
                      "text": "Remove"
                    }
                  },
                  {
                    "text": "Ordered Bars",
                    "correct_answer": {
                      "id": "a1504488551109",
                      "text": "Keep"
                    }
                  },
                  {
                    "text": "Red Background",
                    "correct_answer": {
                      "id": "a1504488561326",
                      "text": "Remove"
                    }
                  },
                  {
                    "text": "Axes/Title Labels",
                    "correct_answer": {
                      "id": "a1504488584571",
                      "text": "Keep"
                    }
                  }
                ],
                "answers": [
                  {
                    "id": "a1504488480735",
                    "text": "Remove"
                  },
                  {
                    "id": "a1504488584571",
                    "text": "Keep"
                  },
                  {
                    "id": "a1504488537166",
                    "text": "Remove"
                  },
                  {
                    "id": "a1504488551109",
                    "text": "Keep"
                  },
                  {
                    "id": "a1504488561326",
                    "text": "Remove"
                  },
                  {
                    "id": "a1522363857614",
                    "text": "Keep"
                  }
                ]
              }
            },
            {
              "id": 390040,
              "key": "3136552d-cc59-4fdc-bb90-026ba09423a1",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "### Second Visual\n\nHere is the second visual.  Use it to answer the following quiz question.",
              "instructor_notes": ""
            },
            {
              "id": 390041,
              "key": "ea3d628c-a0a1-4cf1-96c4-cf3a996e9b41",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2017/September/59acae2a_screen-shot-2017-09-03-at-6.34.02-pm/screen-shot-2017-09-03-at-6.34.02-pm.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/ea3d628c-a0a1-4cf1-96c4-cf3a996e9b41",
              "caption": "",
              "alt": "",
              "width": 775,
              "height": 475,
              "instructor_notes": null
            },
            {
              "id": 390042,
              "key": "61e11cb1-2bd3-4f71-8850-cdbd9bfd6eb5",
              "title": "",
              "semantic_type": "CheckboxQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "61e11cb1-2bd3-4f71-8850-cdbd9bfd6eb5",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "What does this plot do well?",
                "answers": [
                  {
                    "id": "a1504489040719",
                    "text": "High data-ink ratio.",
                    "is_correct": true
                  },
                  {
                    "id": "a1504489056833",
                    "text": "No chart junk.",
                    "is_correct": true
                  },
                  {
                    "id": "a1504489090506",
                    "text": "Highlights where the remote is most likely hiding in a way that stands out.",
                    "is_correct": false
                  },
                  {
                    "id": "a1504489129961",
                    "text": "Highlights the answer to the question of \"Is your remote gone forever?\"",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 390044,
              "key": "778235f5-0bc7-425f-a910-0a45d49918dc",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "### Final Quiz of the Lesson\nThis final quiz won't be assessed, but consider one of the questions that was posed in one of the earlier concepts comparing student interest in science before and after attending a science camp.  The data for that scenario is provided [here in the third sheet](https://docs.google.com/spreadsheets/d/1mFx04Ejvl8Wq5Os1CEyix8HvDx0Ud8xnXFeYNujENz4/edit#gid=1132527843).",
              "instructor_notes": ""
            },
            {
              "id": 390043,
              "key": "77e59b94-3357-44cd-81b4-d0c3e53862e0",
              "title": "",
              "semantic_type": "TaskListAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "77e59b94-3357-44cd-81b4-d0c3e53862e0",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "tasks": [
                "Open the data in the spreadsheet application of your choice.",
                "Determine the question you would ask of this dataset.",
                "Create a visual you would build to answer the question using what you learned in this lesson.",
                "Determine the conclusion you would provide to your audience.",
                "Determine the action you would have for the audience.",
                "Share your story with a friend, family member, or a member of your classroom network."
              ],
              "positive_feedback": "Great job!",
              "video_feedback": null,
              "description": "Use the data linked above to complete the following task list."
            }
          ]
        },
        {
          "id": 578683,
          "key": "02447626-b230-44be-9b1c-015a012cd2f9",
          "title": "Polishing Plots",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "02447626-b230-44be-9b1c-015a012cd2f9",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 578691,
              "key": "1456488a-2299-45db-bff6-e4ec82974cb5",
              "title": "L6 061 Polishing Plots V3",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "4TixzVx79uk",
                "china_cdn_id": "4TixzVx79uk.mp4"
              }
            },
            {
              "id": 578693,
              "key": "7d8d18f7-df4d-4931-b83c-20a93c8b4a5e",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Polishing Plots\n\nThus far in the course, the code you've seen has been fairly bare-bones, just enough to get your plots created. In order to convey your findings to others quickly and efficiently, you'll need to put work into polishing your plots. There are many dimensions to consider when putting together a polished plot.\n\n##### Choose an appropriate plot\nYour choice of plot will depend on the number of variables that you have and their types: nominal, ordinal, discrete numeric, or continuous. Choice of plot also depends on the specific relationship that you want to convey. For example, whether you choose a violin plot, box plot, or adapted bar chart depends on how much data you have and whether distributions are significant or important. You'll be more likely to use a violin plot if you have a lot of data and the distributions are meaningful, and more inclined to use a box plot or bar chart if you have less data, or the distributions are less reliable.\n\n##### Choose appropriate encodings\nYour variables should impact not just the type of plot that is chosen, but also the variable encodings. For example, if you have three numeric variables, you shouldn't just assign x-position, y-position, and color encodings randomly. In many cases, the two variables that are most important should take the positional encodings; if one represents an outcome or dependent variable, then it should be plotted on the y-axis. In other cases, it makes sense to plot the dependent measure with color, as though you are taking a top-down view of the plane defined by the two independent measures plotted on the axes.\n\n##### Pay attention to design integrity\nWhen setting up your plotting parameters, remember the design principles from earlier in the course.\n\nMake sure that you minimize chart junk and maximize the data-ink ratio, as far as it maintains good interpretability of the data. When deciding whether or not to add non-positional encodings, make sure that they are meaningful. For example, using color in a frequency bar chart may not be necessary on its own, but will be useful if those colors are used again later in the same presentation, matched with their original groups. By the same token, avoid using the same color scheme for different variables to minimize the chance of reader confusion.\n\nYou should also ensure that your plot avoids lie factors as much as possible. If you have a bar chart or histogram, it is best to anchor them to a 0 baseline. If you're employing a scale transformation, signal this clearly in the title, axis labels, and tick marks.\n\n##### Label axes and choose appropriate tick marks\n\nFor your positional axes, make sure you include axis labels. This is less important in exploration when you have the code available and have an extended flow to your work, but when you're conveying only the key pieces to others, it's crucial. When you add an axis label, make sure you also provide the units of measurement, if applicable (e.g., stating \"Height (cm)\" rather than just \"Height\").\n\nAs for tick marks, you should include at least three tick marks on each axis. This is especially important for data that has been transformed: you want enough tick marks so that the scale of the data can be communicated there. If your values are very large or very small numbers, consider using abbreviations to relabel the ticks (e.g., use \"250K\" instead of \"250000\").\n\n##### Provide legends for non-positional variables\n\nMake sure that you add a legend for variables not depicted on the axes of your plot. For color encoding, you can add a color bar to the side of the plot. The most important new thing here is that you provide a descriptive label to your legend or color bar, just as you would the axes of your plot.\n\n##### Title your plot and include descriptive comments\n\nFinally, make sure that you provide a descriptive title to your plot. If this is a key plot that presents important findings to others, aim to create a title that draws attention to those main points, rather than just state what variables are plotted.\n\nAlso, realize that while a visualization might be the core mechanism by which you convey findings, it need not stand alone. Comments in the text below or surrounding the plot can provide valuable context to help the reader understand your message, or reinforce the main points that they should have gotten.",
              "instructor_notes": ""
            },
            {
              "id": 593095,
              "key": "39b3d83c-2e74-4de4-8db7-c1419a64d577",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Using Matplotlib to Polish Plots\n\nBack in the univariate plots lesson, you were introduced to the general way that visualizations are structured in matplotlib and seaborn: each visualization is based off a single Figure, which contains one or more Axes, and each Axes houses elements like points, lines, and boxes that depict the plotted data. Understanding and making use of this structure will open up your ability to polish your visualizations. Each function below is linked to its documentation page and which object type it is associated with.\n\n- [`figure`](https://matplotlib.org/api/_as_gen/matplotlib.pyplot.figure.html) (Figure): Used to create a new figure. You'll use this first to initialize the figure, most often using the \"figsize\" parameter to set the figure dimensions.\n- [`xlabel`](https://matplotlib.org/api/_as_gen/matplotlib.pyplot.xlabel.html) and [`ylabel`](https://matplotlib.org/api/_as_gen/matplotlib.pyplot.ylabel.html) (Axes): Used for setting axis labels.\n- [`xticks`](https://matplotlib.org/api/_as_gen/matplotlib.pyplot.xticks.html) and [`yticks`](https://matplotlib.org/api/_as_gen/matplotlib.pyplot.yticks.html) (Axes): Used for setting tick marks.\n\n\n- [`legend`](https://matplotlib.org/api/_as_gen/matplotlib.pyplot.legend.html) (Axes): Used to create and customize a legend. One key parameter to use is \"title\", which allows you to label what feature is being depicted in the legend. You might also need to make use of the \"loc\" and \"ncol\" parameters to move and shape the legend if it gets placed in an awkward location by default.\n- [`colorbar`](https://matplotlib.org/api/_as_gen/matplotlib.pyplot.colorbar.html) (Axes): Used to add a colorbar to a plot. Use the \"label\" parameter to set the label on a colorbar.\n\n\n- [`title`](https://matplotlib.org/api/_as_gen/matplotlib.pyplot.title.html) (Axes): Used for setting axis titles.\n- [`suptitle`](https://matplotlib.org/api/_as_gen/matplotlib.pyplot.suptitle.html) (Figure): Used for setting figure titles. The main difference between `suptitle` and `title` is that the former sets a title for the Figure as a whole, and the latter for only a single Axes. This is an important distinction: if you're using faceting or subplotting, you'll want to use `suptitle` to set a title for the figure as a whole.\n\nAll of the functions above, or parameters associated with those functions in the case of seaborn, have been used sporadically throughout the course. Below are a couple examples of these polishing functions in use.",
              "instructor_notes": ""
            },
            {
              "id": 713861,
              "key": "a3fc27ad-2af7-442a-87b4-64b9f53d0167",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "This example makes use of the fuel economy dataset. Since a colorbar is being added to the plot, `figsize` is used to make the figure a little bit wider than normal. Title, axes, and colorbar are all labeled. Note how the units of each feature being plotted is given in parentheses in each label.\n\n```python\n# loading in the data, sampling to reduce points plotted\nfuel_econ = pd.read_csv('./data/fuel_econ.csv')\n\nnp.random.seed(2018)\nsample = np.random.choice(fuel_econ.shape[0], 200, replace = False)\nfuel_econ_subset = fuel_econ.loc[sample]\n\n# plotting the data\nplt.figure(figsize = [7,4])\nplt.scatter(data = fuel_econ_subset, x = 'displ', y = 'comb', c = 'co2',\n            cmap = 'viridis_r')\nplt.title('Fuel Efficiency and CO2 Output by Engine Size')\nplt.xlabel('Displacement (l)')\nplt.ylabel('Combined Fuel Eff. (mpg)')\nplt.colorbar(label = 'CO2 (g/mi)');\n```",
              "instructor_notes": ""
            },
            {
              "id": 713855,
              "key": "21fbea4b-897d-4ef9-aef1-ca0ecdadbdd9",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/September/5b9801a9_l6-c06-polishing1/l6-c06-polishing1.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/21fbea4b-897d-4ef9-aef1-ca0ecdadbdd9",
              "caption": "",
              "alt": "",
              "width": 504,
              "height": 288,
              "instructor_notes": null
            }
          ]
        },
        {
          "id": 578684,
          "key": "212a1277-279e-4403-8a92-8a113f263bab",
          "title": "Polishing Plots Practice",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "212a1277-279e-4403-8a92-8a113f263bab",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 782910,
              "key": "cc0e288e-6ceb-4111-b8d4-06e9437bda13",
              "title": null,
              "semantic_type": "WorkspaceAtom",
              "is_public": true,
              "workspace_id": "r594140c578684xJUPYTERmfj72tjj",
              "pool_id": "jupyter",
              "view_id": "jupyter-c7d8v",
              "gpu_capable": false,
              "configuration": {
                "id": "reserved",
                "blueprint": {
                  "conf": {
                    "disk": null,
                    "ports": [],
                    "allowGrade": false,
                    "allowSubmit": false,
                    "defaultPath": "/notebooks/Polishing_Plots_Practice.ipynb"
                  },
                  "kind": "jupyter"
                },
                "workspaceId": "reserved"
              },
              "starter_files": null
            }
          ]
        },
        {
          "id": 578685,
          "key": "b31d4ac0-5e36-440d-aab2-4621c47f91e2",
          "title": "Creating a Slide Deck with Jupyter",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "b31d4ac0-5e36-440d-aab2-4621c47f91e2",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": {
            "files": [
              {
                "name": "output_toggle.tpl",
                "uri": "https://video.udacity-data.com/topher/2018/March/5abe98f3_output-toggle/output-toggle.tpl"
              }
            ],
            "google_plus_link": null,
            "career_resource_center_link": null,
            "coaching_appointments_link": null,
            "office_hours_link": null,
            "aws_provisioning_link": null
          },
          "atoms": [
            {
              "id": 578893,
              "key": "405da639-75ba-43ae-a215-c9f7a0539545",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Creating a Slide Deck with Jupyter\n\nThere are many ways in which you can use explanatory visualizations to convey findings to others. You might save your plots on their own, and embed them in a report or blog post. Visualizations also have a major place in presentations, as part of a slide deck. When it comes to creating slides, you might normally think of dedicated tools like Powerpoint, Keynote, or Google Slides. What you might not be aware of is the fact that Jupyter notebooks include a tool, [**nbconvert**](https://nbconvert.readthedocs.io/en/latest/), that can export notebooks in an HTML slides format. The video below demonstrates a walkthrough of this:",
              "instructor_notes": ""
            },
            {
              "id": 578696,
              "key": "a4ba6be1-7756-4a11-8367-d42a25cbc1d1",
              "title": "Data Vis L6 C06 V1",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "qIot9qrvcF8",
                "china_cdn_id": "qIot9qrvcF8.mp4"
              }
            },
            {
              "id": 578896,
              "key": "489247de-5662-4adc-8b6b-20b07811a66c",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "If you're planning on creating a slide deck presentation through a Jupyter notebook, it's a good idea to create a new notebook that is separate from your original, exploratory, work. This way, your explanatory work will be focused, and there will be fewer elements to categorize. To start, you need to categorize the type of slide element that each cell will correspond with. From the menu bar, select **View > Cell Toolbar > Slideshow**. You'll see a drop down appear in the upper right hand corner of each cell, from which you can assign slide element types.",
              "instructor_notes": ""
            },
            {
              "id": 578923,
              "key": "bb444423-aea3-439f-87ce-e34c5ff1bb3f",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/March/5abeb0b5_l6-c08-slidedeck1/l6-c08-slidedeck1.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/bb444423-aea3-439f-87ce-e34c5ff1bb3f",
              "caption": "Go to View > Cell Toolbar > Slideshow (left) to make the slide type dropdown show up on each cell (right).",
              "alt": "",
              "width": 843,
              "height": 317,
              "instructor_notes": null
            },
            {
              "id": 578940,
              "key": "bbfd7c13-fb4a-4bce-83a7-f84968c186ab",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "For cells that you want readers to see, you'll choose the Slide, Sub-Slide, or Fragment types. Slides will form the main flow of the presentation, while sub-slides are children of slides in the main flow. Fragments are attached to preceding slides or sub-slides, and allow for gradual reveals of information on the same slide. It's a little hard to describe this abstractly through text: you can see an example of Slides, Sub-Slides, and Fragments at work through the example presentation found on the [reveal.js](https://revealjs.com/) homepage (the library that is behind the nbconvert slide functionality).\n\nCells that you don't want users to see should be in the Skip or Notes types. Skip-type cells will never show up in a slide flow, while Notes cells can only be seen by the presenter in a speaker notes window.\n\nIn addition to setting slide types, make sure that all of your code cells have been run and produce the output that you want to show. nbconvert will only export elements of the notebook as-is, and won't run the notebook cells as is. It is recommended that you use the **Kernel > Restart & Run All** menu option to do a clean run-through of all of your cells as a final preparatory action.\n\nOnce your notebook has been prepared, save it and shut down your notebook server. On the command line, you can render the notebook as slides using the following expression as a base.\n```text\njupyter nbconvert presentation.ipynb --to slides\n```\n\nHowever, it's likely that you'll want to add additional options to the nbconvert call to make the slides look cleaner and to make serving them easier.\n\nBy default, code cell inputs and outputs are both rendered in the slides. More likely than not, you'll want to hide the code in your presentation so that all attention can be put on the visualizations and text. To do this, you can specify a template file using the `--template` option. The template file available at [this link](https://s3.amazonaws.com/video.udacity-data.com/topher/2018/March/5abe98f3_output-toggle/output-toggle.tpl) and in the Resources at the bottom of this page, will hide code cells from nbconvert.\n\nAdditionally, running the base expression will not automatically open up the slide deck for viewing. In order to serve the slides, you would need to install a local copy of reveal.js ([Installation documentation](https://github.com/hakimel/reveal.js#installation)), make sure that your HTML slides point to the library correctly (using the `--reveal-prefix` option), and then start a local http server (e.g., via `python -m http.server`). Alternatively, you can add the `--post serve` option to your expression to make use of a public, online version of `reveal.js`, start up a server, and immediately open a tab in your web browser with the slide deck ready to navigate.\n\nIf you're at home with HTML, css, and web engine templating, then you have a lot of potential room for customizing your slide deck work. Otherwise, you can just use an expression like the following to get a basic slide deck up and running.\n```text\njupyter nbconvert presentation.ipynb --to slides --template output-toggle.tpl\n--post serve\n```",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 578686,
          "key": "e1796879-88fb-4f99-96bd-016671ee5d57",
          "title": "Getting and Using Feedback",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "e1796879-88fb-4f99-96bd-016671ee5d57",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 691980,
              "key": "138c4d9e-3db6-4581-ba1d-785910ed6789",
              "title": "L6 10 V1 V6",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "LoYT4NMSPGk",
                "china_cdn_id": "LoYT4NMSPGk.mp4"
              }
            },
            {
              "id": 578710,
              "key": "5236c772-e8a7-4594-a25a-407e1ebfad9a",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Getting and Using Feedback\n\nWhen putting together a report or presentation to communicate results to others, it never hurts to get outside eyes on your work to make sure that your findings are conveyed clearly. Asking colleagues, friends, or family to provide feedback can be a good step to making sure that the story that you wish to tell hits its mark.\n\nWhen you present your work to the reader, let them go through the work for themselves first. Then, follow up with them to check whether or not their conclusions match what you were hoping to convey. The following questions might be good starters; be sure to follow up or come up with your own questions:\n\n- What do you notice about each visualization?\n- What questions do you have about the data?\n- What relationships do you notice?\n- What do you think is the main takeaway from the report / presentation?\n- Is there anything that you don’t understand from the plots?\n\nUse the feedback that you get from your reader to iterate on and improve on your designs. The alternative perspective that they have may reveal things that you didn't consider or points that require further clarification.",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 578688,
          "key": "698c9315-c080-4e54-8b95-63aaf91d6604",
          "title": "Lesson Summary",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "698c9315-c080-4e54-8b95-63aaf91d6604",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 578701,
              "key": "1b2150cb-311d-476e-af21-5fcaa62d2089",
              "title": "L6 131 Lesson Summary V1",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "t6ss31RZF34",
                "china_cdn_id": "t6ss31RZF34.mp4"
              }
            }
          ]
        }
      ]
    }
  },
  "_deprecated": [
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    }
  ]
}
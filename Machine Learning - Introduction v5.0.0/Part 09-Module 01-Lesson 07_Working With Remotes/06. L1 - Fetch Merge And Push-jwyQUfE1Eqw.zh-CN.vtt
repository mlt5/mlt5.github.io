WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:02.609
这是我们熟悉的起点

00:00:02.609 --> 00:00:07.199
本地仓库落后于远程仓库

00:00:07.200 --> 00:00:09.449
现在 假装我们并没有意识到这一点

00:00:09.449 --> 00:00:13.859
然后在本地仓库做一次提交

00:00:13.859 --> 00:00:15.629
现在我们有两个仓库

00:00:15.630 --> 00:00:21.240
前几个提交相同 但是现在它们的 master 分支指向不同提交

00:00:21.239 --> 00:00:24.804
如果我们试着运行 git pull 命令 并不会起作用

00:00:24.804 --> 00:00:27.420
但是我们可以使用 git fetch 命令

00:00:27.420 --> 00:00:30.460
在不合并分支的情况下获取远程仓库的提交

00:00:30.460 --> 00:00:33.929
所以如果我们执行 git fetch origin master 命令

00:00:33.929 --> 00:00:35.579
就会获取远程仓库的提交

00:00:35.579 --> 00:00:40.780
并且将 origin/master 指向它们

00:00:40.780 --> 00:00:42.195
由于我们在 master 分支上

00:00:42.195 --> 00:00:45.480
我们可以运行 git merge origin/master 命令

00:00:45.479 --> 00:00:49.614
把远程做的修改更新到我们的 master 分支上

00:00:49.615 --> 00:00:53.548
现在本地仓库拥有一些远程仓库没有的提交

00:00:53.548 --> 00:00:55.119
所以我们需要推送这些提交

00:00:55.119 --> 00:01:02.000
在 origin/master 分支执行 git push 命令将会推送更新后的本地提交至远程仓库


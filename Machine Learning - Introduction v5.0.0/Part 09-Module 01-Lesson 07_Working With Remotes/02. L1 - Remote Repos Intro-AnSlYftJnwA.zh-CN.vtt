WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:02.959
我们使用 git 来跟踪项目

00:00:02.959 --> 00:00:04.753
这对本地项目来说很方便

00:00:04.753 --> 00:00:07.574
但是要与其他人共享这些本地仓库

00:00:07.575 --> 00:00:09.300
我们需要另一个工具

00:00:09.300 --> 00:00:11.554
也就是 GitHub

00:00:11.554 --> 00:00:15.820
GitHub 是一个用于托管版本控制仓库的服务

00:00:15.820 --> 00:00:18.304
虽然它们的名称很相似

00:00:18.304 --> 00:00:21.420
但是 git 和 Github 之间的差别很大

00:00:21.420 --> 00:00:23.219
git 是用来管理仓库的工具

00:00:23.219 --> 00:00:27.094
主要在命令行上使用

00:00:27.094 --> 00:00:32.274
GitHub 是托管服务 你通常会在浏览器中与其进行交互

00:00:32.274 --> 00:00:36.015
我们将向 GitHub 发送一个本地仓库的副本

00:00:36.015 --> 00:00:38.413
该副本不在本地机器上

00:00:38.412 --> 00:00:41.169
因此叫做远程仓库

00:00:41.170 --> 00:00:43.905
在这节课我们主要学习以下命令

00:00:43.905 --> 00:00:46.978
git remote - 管理远程仓库

00:00:46.978 --> 00:00:50.129
git push - 将修改推送到远程仓库上

00:00:50.130 --> 00:00:52.200
然后是 git pull

00:00:52.200 --> 00:00:55.200
它将从远程仓库上获取更新

00:00:55.200 --> 00:00:57.509
这些命令 (push 和 pull)

00:00:57.509 --> 00:00:59.185
一开始可能不太好懂

00:00:59.185 --> 00:01:02.530
但是你可以从本地机器的角度思考

00:01:02.530 --> 00:01:07.831
在本地仓库中有一些修改需要上传到远程仓库

00:01:07.831 --> 00:01:10.468
因此需要将修改推送 (push) 到远程仓库

00:01:10.468 --> 00:01:14.548
但是如果远程仓库中有需要下载到本地仓库的更新 

00:01:14.549 --> 00:01:18.019
则需要拉取 (pull) 这些修改

00:01:18.019 --> 00:01:20.969
我们将在这节课学习这三个命令

00:01:20.968 --> 00:01:25.000
先来了解一下什么是远程仓库吧


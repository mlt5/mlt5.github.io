WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:01.365
在上一节课中

00:00:01.365 --> 00:00:05.805
我们分析的例子是一场数学考试的成绩

00:00:05.804 --> 00:00:08.175
假如说还有一场考试

00:00:08.175 --> 00:00:11.580
比如说物理考试 考试成绩是这样的

00:00:11.580 --> 00:00:19.004
从成绩来看 这场考试有难度 因为平均分较低 方差较小

00:00:19.004 --> 00:00:21.929
再比如这场考试 一场生物考试

00:00:21.929 --> 00:00:24.170
考试成绩是这样的

00:00:24.170 --> 00:00:27.600
这两场考试的考试成绩可以分别绘制成柱状图

00:00:27.600 --> 00:00:32.234
柱状图表明 他们都遵循高斯分布

00:00:32.234 --> 00:00:34.799
尽管平均数和方差不同

00:00:34.799 --> 00:00:36.794
但都是高斯分布

00:00:36.795 --> 00:00:42.300
假如说 这个数据集 我们想对它做高斯混合模型聚类处理

00:00:42.299 --> 00:00:45.584
把它传递到 Scikit-learn 框架中 然后输入指令

00:00:45.585 --> 00:00:49.785
“利用高斯混合模型找到两个类”

00:00:49.784 --> 00:00:52.125
在此之前 我们先来看一下这个数据集

00:00:52.125 --> 00:00:55.725
这个数据集并不是高斯分布

00:00:55.725 --> 00:01:00.975
因为它是两个数据集的合并程式

00:01:00.975 --> 00:01:04.545
每个子数据集都是高斯分布 但合并后

00:01:04.545 --> 00:01:06.060
合并程式不是高斯分布

00:01:06.060 --> 00:01:10.365
它们是两个没有标签的高斯分布

00:01:10.364 --> 00:01:12.929
但是 Scikit-learn 不知道这一点

00:01:12.930 --> 00:01:15.990
我们输入一系列点 然后输入指令

00:01:15.989 --> 00:01:17.774
“将他们分为两类”

00:01:17.775 --> 00:01:21.390
得到的结果就会是这两个类

00:01:21.390 --> 00:01:28.275
Scikit-learn 框架能够通过寻找高斯混合分布 找到这两个类

00:01:28.275 --> 00:01:31.635
高斯混合分布本身并不是高斯模型

00:01:31.635 --> 00:01:34.230
而是两个高斯模型的混合物

00:01:34.230 --> 00:01:38.685
所以 它是一个模型 但包含两个高斯分布

00:01:38.685 --> 00:01:43.215
哪些点最有可能来自于一个高斯分布

00:01:43.215 --> 00:01:49.015
哪些点就被分到一个单独的类中

00:01:49.015 --> 00:01:52.400
因此 这些点最有可能是这个高斯分布产生的

00:01:52.400 --> 00:01:55.910
所以它们属于这个类

00:01:55.909 --> 00:01:58.939
这些点最有可能是这个高斯分布产生的

00:01:58.939 --> 00:02:02.179
所以它们属于这个类

00:02:02.180 --> 00:02:04.700
这个一维度的例子

00:02:04.700 --> 00:02:07.969
可能是高斯混合模型聚类算法最简单的形式

00:02:07.969 --> 00:02:10.129
在下一节课中 我们将学习

00:02:10.129 --> 00:02:14.000
二维度的高斯分布的样式


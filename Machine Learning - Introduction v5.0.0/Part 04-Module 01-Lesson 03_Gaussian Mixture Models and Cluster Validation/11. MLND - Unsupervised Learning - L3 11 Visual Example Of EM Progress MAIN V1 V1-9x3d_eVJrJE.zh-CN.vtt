WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:03.810
让我们通过例子来看 EM (期望最大化) 是如何进行的

00:00:03.810 --> 00:00:07.470
假如这是初始数据点

00:00:07.469 --> 00:00:10.814
它应该是这样的

00:00:10.814 --> 00:00:13.619
这和上一个视频是一样的

00:00:13.619 --> 00:00:18.299
我们的目的是找到将会在这里聚集的数据集

00:00:18.300 --> 00:00:21.630
和在这里聚集的第二个数据集

00:00:21.629 --> 00:00:24.419
很明显 对于我们最初想要寻求的两个类

00:00:24.420 --> 00:00:28.605
这种情况是不成功的

00:00:28.605 --> 00:00:32.119
这是由于我们给了它不好的输入

00:00:32.119 --> 00:00:37.685
所以在这里 我们选择了随机手动初始化模型

00:00:37.685 --> 00:00:42.869
我们没有为它选择好的初始参数

00:00:42.869 --> 00:00:46.890
但是 这是一个球面协方差

00:00:46.890 --> 00:00:53.189
也就是说 每个高斯只有一个均值和方差

00:00:53.189 --> 00:00:56.204
还有其它方法来设置协方差类型

00:00:56.204 --> 00:00:58.979
我们将在下几张幻灯片中进行了解

00:00:58.979 --> 00:01:03.179
所以让我们做一个更好类型的初始化

00:01:03.179 --> 00:01:05.189
我们将其设置为默认

00:01:05.189 --> 00:01:08.789
也就是首先使用 K 均值

00:01:08.790 --> 00:01:13.200
然后利用 K 均值的结果初始化高斯模型

00:01:13.200 --> 00:01:15.615
因此如果我们进行这一步

00:01:15.614 --> 00:01:17.879
它应该是这样的

00:01:17.879 --> 00:01:20.924
我们可以看到它正在汇聚到两个模型

00:01:20.924 --> 00:01:24.859
但仍然没有找到我们想要的两个聚类

00:01:24.859 --> 00:01:28.090
所以这是尝试改变协方差类型的好时机

00:01:28.090 --> 00:01:33.385
因此 我们不使用简单的圆高斯模型

00:01:33.385 --> 00:01:39.760
要使用协方差矩阵 而不是每个高斯模型的方差

00:01:39.760 --> 00:01:42.873
这样可以让我们的圆圈成为椭圆形

00:01:42.873 --> 00:01:45.984
也可以让它们稍微旋转一下

00:01:45.984 --> 00:01:47.950
这就是我们要看的例子

00:01:47.950 --> 00:01:54.960
所以 这些是用 k 均值做高斯混合模型的默认值

00:01:54.959 --> 00:01:57.459
协方差类型为 full

00:01:57.459 --> 00:02:00.524
初始化将是 k 均值的默认值

00:02:00.525 --> 00:02:03.155
如果我们进行这一过程 应该是这样的

00:02:03.155 --> 00:02:07.489
但是我们可以看到 它成功地将这个集群分隔成一个高斯

00:02:07.489 --> 00:02:10.340
再把其它所有的点作为一个高斯 

00:02:10.340 --> 00:02:13.580
它看起来是这样的

00:02:13.580 --> 00:02:19.160
这就是高斯混合模型可以做出来的

00:02:19.159 --> 00:02:22.189
我们最初的两个数据集的最佳近似值

00:02:22.189 --> 00:02:27.069
其他的聚类方法或许是做不出来的


WEBVTT
Kind: captions
Language: ar

00:00:00.000 --> 00:00:02.609
لنفترض أن لدينا GIT repository هذا،

00:00:02.609 --> 00:00:07.740
لكننا أدركنا أن هذه التثبيتات القليلة الأخيرة ما هي
إلا تغييرات بسيطة، مثل إصلاح الأخطاء المطبعية.

00:00:07.740 --> 00:00:10.253
لكنها ستهتم بجعل GIT log أكثر وضوحًا،

00:00:10.253 --> 00:00:13.500
إذا تم دمج هذه التثبيتات معًا لتشكِّل تثبيتًا واحدًا
فقط.

00:00:13.500 --> 00:00:17.339
يمكننا تشغيل GIT rebase - العنوان حتى ثلاثة

00:00:17.339 --> 00:00:22.324
لجمع التثبيتات الثلاثة الأخيرة ودمجها في تثبيت
واحد.

00:00:22.324 --> 00:00:25.513
تذكّروا أن العنوان يشير إلى الموقع الحالي.

00:00:25.513 --> 00:00:27.745
بالنسبة لنا، لما كنا في الفرع الرئيسي،

00:00:27.745 --> 00:00:29.594
لذلك فإن العنوان يشير إلى الفرع الرئيسي.

00:00:29.594 --> 00:00:33.009
العنوان حتى واحد هو موقع واحد قبل العنوان،

00:00:33.009 --> 00:00:35.594
وهو التثبيت السابق أو الأب للتثبيت الخاطئ.

00:00:35.594 --> 00:00:38.625
العنوان حتى اثنين هو الموقع الثاني قبل العنوان،

00:00:38.625 --> 00:00:40.408
وهو التثبيت الجد.

00:00:40.408 --> 00:00:44.204
العنوان حتى ثلاثة، يمكنكم التخمين أنه الموقع الثالث
قبل العنوان،

00:00:44.204 --> 00:00:47.059
وهو التثبيت الجد الأكبر للتثبيت الذي نوجد به.

00:00:47.060 --> 00:00:49.599
ونحن الآن لا نرغب في التخلص من التثبيت ثمانية،

00:00:49.598 --> 00:00:51.464
والذي يشير إليه العنوان حتى ثلاثة.

00:00:51.465 --> 00:00:53.925
لكن هذا هو الأمر GIT rebase،

00:00:53.924 --> 00:00:55.919
لذا فإننا نستخدم العنوان حتى ثلاثة

00:00:55.920 --> 00:00:59.405
باعتباره القاعدة التي تقول بأن التثبيتات الأخرى
ستوضع على اثنين.

00:00:59.405 --> 00:01:00.570
قد يكون هذا مربكًا نوعًا ما،

00:01:00.570 --> 00:01:02.730
لذا فأسهل طريقه لتذكر ذلك

00:01:02.729 --> 00:01:04.004
هي أنه في حالة رغبتكم في دمج،

00:01:04.004 --> 00:01:05.789
لنقل 17 تثبيتًا مثلًا،

00:01:05.790 --> 00:01:09.660
فكل ما عليكم فعله هو استخدام الرقم 17 في هذا
المثال،

00:01:09.659 --> 00:01:12.284
لذلك سيكون العنوان حتى 17.

00:01:12.284 --> 00:01:15.959
لذا فإن تشغيل GIT rebase - العنوان حتى ثلاثة سيأخذ

00:01:15.959 --> 00:01:20.609
التثبيت الذي كان عليه والتثبيتين السابقين وسنتمكن
من دمجها في تثبيت واحد.

00:01:20.609 --> 00:01:22.469
وسيؤدي ذلك إلى إنشاء تثبيت جديد يسمى sha،

00:01:22.469 --> 00:01:25.799
وينقل الفرع الرئيسي للإشارة إلى هذا التثبيت
الجديد.

00:01:25.799 --> 00:01:29.939
لكن لاحظوا الآن، لا يوجد أي فرع يشير إلى التصريحات
الأصلية،

00:01:29.939 --> 00:01:31.629
لذلك فإنها لا تظهر في GIT log،

00:01:31.629 --> 00:01:34.379
وسيقوم GIT في النهاية بمسحها تمامًا.

00:01:34.379 --> 00:01:37.933
والآن إذا كنتم قلقين بشأن تدمير مستودعكم وترغبون في
الحصول على نسخة احتياطية،

00:01:37.933 --> 00:01:42.500
فما عليكم فعله هو إنشاء نسخة احتياطية. دعونا نبدأ
من جديد لمدة ثانية.

00:01:42.500 --> 00:01:47.025
عندما أقوم بإعادة تحديد، أقوم بإنشاء فرع بسهولة يسمى
نسخة احتياطية،

00:01:47.025 --> 00:01:50.680
وأضعه في الموقع نفسه الخاص بالفرع الذي أقوم
بتحديده.

00:01:50.680 --> 00:01:52.830
لا زلت في الفرع الرئيسي، لذلك لم أتحقق

00:01:52.829 --> 00:01:56.840
من فرع النسخة الاحتياطية وسأقوم بتشغيل الأمر نفسه
فقط.

00:01:56.840 --> 00:01:58.680
وسيؤدي ذلك إلى دمج التثبيتات في تثبيت واحد،

00:01:58.680 --> 00:02:01.320
ونقل الفرع الرئيسي للإشارة إلى هذا التثبيت الجديد،

00:02:01.319 --> 00:02:06.194
لكن لم يتم حذف التثبيتات الأصلية وستظل تظهر وتحصل
على سجل،

00:02:06.194 --> 00:02:08.340
لأن أحد الفروع يشير إليها.


WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:03.930
事实证明 在任何基于距离的机器学习模型中

00:00:03.930 --> 00:00:05.860
你都需要缩放你的数据

00:00:05.860 --> 00:00:09.330
如果你的特征在完全不同的尺度上

00:00:09.330 --> 00:00:13.285
你的k-means算法将产生完全不同的聚类

00:00:13.285 --> 00:00:14.699
在本notebook中

00:00:14.699 --> 00:00:18.309
我们将看到人们用来缩放数据的最常见方式

00:00:18.309 --> 00:00:22.589
首先让我们读入必要的库并创建数据集 

00:00:22.589 --> 00:00:24.434
它（数据集）将被存储在变量df中

00:00:24.434 --> 00:00:27.824
我们做的第一件事就是查看数据

00:00:27.824 --> 00:00:29.864
所以 让我们看看标题

00:00:29.864 --> 00:00:31.669
看起来只有两列

00:00:31.670 --> 00:00:33.785
一个是身高 一个是体重。

00:00:33.784 --> 00:00:36.934
我们愿意的话 

00:00:36.935 --> 00:00:41.630
我们也可以看看数据的描述或把它们一起画在图中

00:00:41.630 --> 00:00:44.125
这是我最常做的两件事

00:00:44.125 --> 00:00:47.335
而且 看看形状有时也很有用

00:00:47.335 --> 00:00:49.350
所以 看起来我们有200行

00:00:49.350 --> 00:00:52.285
两列 没有缺失值

00:00:52.284 --> 00:00:55.459
有两种非常流行的缩放方法

00:00:55.460 --> 00:00:59.314
一个称为MinMaxScaler 另一个称为StandardScaler

00:00:59.314 --> 00:01:02.219
MinMaxScaler把数据缩放到0和1之间

00:01:02.219 --> 00:01:06.894
而StandardScaler则把数据缩放为0均值和标准差为1

00:01:06.894 --> 00:01:09.644
让我们看看这两个并练习一下

00:01:09.644 --> 00:01:12.589
在这里 你可以看到 基本上

00:01:12.590 --> 00:01:17.520
我们在一个步骤中对数据进行拟合和变换

00:01:17.519 --> 00:01:19.795
我们把结果存储在这个df_ss变量中

00:01:19.795 --> 00:01:24.820
它是经过标准化特征缩放变换的数组

00:01:24.819 --> 00:01:28.625
然后这里发生的是我们把它变成一个数据框

00:01:28.625 --> 00:01:30.114
添加上这两列

00:01:30.114 --> 00:01:34.099
然后快速对数据集做个散点图所以 看起来是这样

00:01:34.099 --> 00:01:38.434
如果我们愿意 我们也可以用原始数据集来做

00:01:38.435 --> 00:01:40.750
所以你可以看到它是这样的

00:01:40.750 --> 00:01:42.920
它们看起来差不多

00:01:42.920 --> 00:01:45.900
而且现在我们要用MinMaxScaler做同样的事情

00:01:45.900 --> 00:01:47.900
所以 我们自己来练习

00:01:47.900 --> 00:01:52.250
让我们继续 我们将基本上做同样的处理

00:01:52.250 --> 00:01:54.685
但现在用的是MinMaxScaler

00:01:54.685 --> 00:01:58.195
所以 我们把StandardScaler

00:01:58.194 --> 00:02:04.069
替换为MinMaxScaler  然后我们将做一个拟合变换

00:02:04.069 --> 00:02:10.084
我把它称为 MM  然后和上面的一样

00:02:10.085 --> 00:02:12.465
我们只是想把它转换为一个数据框

00:02:12.465 --> 00:02:15.504
更改列名并给数据绘图

00:02:15.504 --> 00:02:22.280
所以 这是列 然后将它们一起画在图中

00:02:22.280 --> 00:02:24.004
哦 我没有运行这个单元格

00:02:24.004 --> 00:02:27.500
在这里 你可以看到当我们使用StandardScaler

00:02:27.500 --> 00:02:31.115
它们都以0为中心 范围基本上在3和 -3 

00:02:31.115 --> 00:02:34.710
在这个坐标轴是2 和 -2 之间

00:02:34.710 --> 00:02:37.270
但有一点点过  还有一点超过

00:02:37.270 --> 00:02:38.939
让我们看这个数据集

00:02:38.939 --> 00:02:42.164
你可以看到每个变量都在0到1之间

00:02:42.164 --> 00:02:45.049
所以 MinMaxScaler把数据缩放在0到1之间

00:02:45.050 --> 00:02:51.260
而StandardScaler则是缩放到均值为0  标准差或方差为1

00:02:51.259 --> 00:02:54.579
所以，你可以看到如果我们在这个身高和体重数据集中

00:02:54.580 --> 00:03:00.070
创建10个不同的聚类 这就是它的样子

00:03:00.069 --> 00:03:05.209
在最后一部分中 他们只是想让我们用经过特征缩放的数据集来做这些

00:03:05.210 --> 00:03:08.900
所以 这个只是用原数据集（未做特征缩放）

00:03:08.900 --> 00:03:12.105
但是我们可以使用经过特征缩放的数据集做同样的事情

00:03:12.104 --> 00:03:19.604
其中一个叫SS 最后一个叫MM

00:03:19.604 --> 00:03:21.514
在这种特殊情况下

00:03:21.514 --> 00:03:23.474
看起来缩放并不重要

00:03:23.474 --> 00:03:24.810
所以 在我们的回答中

00:03:24.810 --> 00:03:28.314
我们可以写下 在这种情况下 特征缩放是如何无关紧要的

00:03:28.314 --> 00:03:29.805
但在另外一些情况下

00:03:29.805 --> 00:03:34.129
特征缩放可能会完全改变聚类


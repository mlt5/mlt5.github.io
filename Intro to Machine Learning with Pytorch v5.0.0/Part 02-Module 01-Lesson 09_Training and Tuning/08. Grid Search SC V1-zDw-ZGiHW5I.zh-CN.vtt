WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:02.649
总结一下我们前面学过的机器学习内容

00:00:02.649 --> 00:00:05.878
首先 我们用训练集训练一些模型

00:00:05.878 --> 00:00:09.538
然后利用交叉验证集数据在其中选择一个最好的模型

00:00:09.538 --> 00:00:13.228
最后 我们用测试数据进行检测来保证这个模型是最好的

00:00:13.230 --> 00:00:16.225
这是一个训练逻辑回归模型的例子

00:00:16.225 --> 00:00:17.949
假设我们有四个候选模型

00:00:18.149 --> 00:00:20.064
我们要分别训练一个一阶模型

00:00:20.065 --> 00:00:24.013
它是一条直线  一个二阶、三阶和四阶模型

00:00:24.213 --> 00:00:26.299
我们用训练集数据来训练

00:00:26.300 --> 00:00:29.219
这个多项式的斜率和系数参数等

00:00:29.219 --> 00:00:32.134
接下来 我们用交叉验证集数据来计算

00:00:32.134 --> 00:00:34.634
这些模型的F1分数

00:00:34.634 --> 00:00:38.363
然后从中选择一个F1分数最高的模型

00:00:38.365 --> 00:00:42.465
最后 使用测试数据来确保我们的模型是好的

00:00:42.465 --> 00:00:46.460
在这种情况下 模型的参数是多项式的各个系数

00:00:46.460 --> 00:00:50.259
但多项式的阶数好象也是一个重要参数

00:00:50.259 --> 00:00:52.460
我们称之为超参数

00:00:52.460 --> 00:00:55.664
让我们看另一个例子假设我们正在训练一个决策树

00:00:55.664 --> 00:00:57.329
它的超参数是什么？

00:00:57.329 --> 00:00:58.783
好吧其中之一就是深度

00:00:58.783 --> 00:01:00.698
假设我们有四个决策树 深度分别为1 

00:01:00.700 --> 00:01:02.725
2、3和4

00:01:02.725 --> 00:01:06.855
我们用训练集数据来训练这些决策树 深度分别为 

00:01:06.855 --> 00:01:09.430
1、2、3和4

00:01:09.430 --> 00:01:13.415
这里的参数是叶子和节点等的阈值

00:01:13.415 --> 00:01:16.179
然后我们在交叉验证集上

00:01:16.379 --> 00:01:19.989
把每个模型的F1分数计算出来

00:01:19.989 --> 00:01:23.738
然后我们选择一个F1分数最高的模型 最后用测试集

00:01:23.938 --> 00:01:25.589
我们验证这个模型是好的

00:01:25.590 --> 00:01:28.310
如果我们有多个超参数会怎么样?

00:01:28.310 --> 00:01:30.674
这里只有一个超参数是深度

00:01:30.674 --> 00:01:33.435
如果我们训练的是支持向量机呢？

00:01:33.435 --> 00:01:35.900
在支持向量机中 我们有一些类似核（kernel）的超参数

00:01:35.900 --> 00:01:38.613
它可以是线性核的或多项式核

00:01:38.813 --> 00:01:42.529
并且我们也有C参数 如果它很小 会给出这样的解

00:01:42.530 --> 00:01:46.503
如果它很大 会给出这种解

00:01:46.703 --> 00:01:53.328
如何在核参数和C参数之间选择最佳组合？好吧 很简单

00:01:53.328 --> 00:01:55.488
它被称为网格搜索 从字面上来说

00:01:55.489 --> 00:01:58.408
做一张有各种可能性的表格 然后选最好的一个

00:01:58.608 --> 00:02:01.119
这里的列是我们可以使用的不同的核  线性核或多项式核

00:02:01.120 --> 00:02:05.253
这里的行是不同的C参数的值

00:02:05.453 --> 00:02:09.693
建议采用一些指数型增长的值 如 0.1

00:02:09.693 --> 00:02:12.958
1、 10、100、1000等

00:02:12.960 --> 00:02:15.960
再次 我们用同一个训练集来训练一组有不同C值的

00:02:15.960 --> 00:02:19.650
线性模型和多项式模型

00:02:19.650 --> 00:02:23.400
我们使用交叉验证集来计算所有这些模型的F1分数

00:02:23.400 --> 00:02:28.120
然后我们简单地选择一个F1分数最高的模型

00:02:28.120 --> 00:02:33.120
最后 我们使用测试集来确保选择的模型的是好的


WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:02.839
大家好 欢迎来到集成算法单元

00:00:02.839 --> 00:00:05.580
在本单元 我们将学习

00:00:05.580 --> 00:00:08.329
怎样把多个简单模型组合成一个更好的模型

00:00:08.528 --> 00:00:13.884
我们将学习两个最流行的集成算法 bagging （自助聚集） 和 boosting （提升算法）

00:00:13.884 --> 00:00:16.690
实际上  bagging （自助聚集）和袋子没有任何关系.

00:00:16.690 --> 00:00:18.999
这个词是自助聚集（bootstrap aggregatin）的英文缩写

00:00:19.199 --> 00:00:22.259
举个例子假设我们要参加一次测试

00:00:22.260 --> 00:00:27.359
为了简化 假设这是一个只有真假话问题的测试 我们对测试不太有把握

00:00:27.359 --> 00:00:29.140
因此想向朋友们求助

00:00:29.140 --> 00:00:30.789
这些是我们的朋友们

00:00:30.789 --> 00:00:32.963
在第一个bagging（自助聚集）算法中

00:00:32.965 --> 00:00:34.363
我们要做的是

00:00:34.564 --> 00:00:37.399
分别向每一个朋友求助这个测试题

00:00:37.399 --> 00:00:41.173
最后再综合他们的答案

00:00:41.173 --> 00:00:43.969
我们如何综合这些答案？有很多方法

00:00:43.969 --> 00:00:46.875
例如 如果测试的答案都是数值

00:00:46.875 --> 00:00:48.679
我们可以简单的计算它们的平均值

00:00:48.679 --> 00:00:51.950
因为 这个测试都是真假话问题 我们也可以进行投票

00:00:51.950 --> 00:00:53.278
对每个问题

00:00:53.478 --> 00:00:58.173
我们会检查哪个选项获得的票数最多  得票最多的选项就是答案

00:00:58.173 --> 00:01:00.408
这样 我们就把一群朋友转化为

00:01:00.408 --> 00:01:03.625
一个天才朋友 他能在测试中更好帮助我们

00:01:03.625 --> 00:01:05.230
提升算法（Boosting ）与此类似

00:01:05.230 --> 00:01:08.450
但只是它会更加发挥我们朋友的长处

00:01:08.450 --> 00:01:11.774
所以 假设我们选则第一个朋友回答测试

00:01:11.974 --> 00:01:13.750
现在 假设这个朋友是哲学家

00:01:13.750 --> 00:01:15.700
他正确回答了所有的哲学问题

00:01:15.700 --> 00:01:18.855
但没有很好地回答科学问题

00:01:18.855 --> 00:01:21.009
因此 我们再从朋友中挑选可以帮忙的人

00:01:21.209 --> 00:01:23.378
很幸运 我们找到一位科学家朋友

00:01:23.578 --> 00:01:27.199
我们就请她回答所有的科学问题

00:01:27.200 --> 00:01:30.908
现在 假设这位科学家和前一位哲学家朋友都不懂体育运动

00:01:31.108 --> 00:01:33.419
看到体育运动类问题都答错了

00:01:33.420 --> 00:01:36.060
我们就找擅长体育运动的朋友回答这类问题

00:01:36.060 --> 00:01:39.275
用同样的方法来处理数学问题

00:01:39.275 --> 00:01:41.930
音乐问题等

00:01:41.930 --> 00:01:44.408
最后 我们来把这些各有专长的朋友转化成一个超级聪明的朋友

00:01:44.608 --> 00:01:48.184
他会很擅长这个测试

00:01:48.185 --> 00:01:51.533
这种方法就是提升算法（Boosting） 这里有一些注释

00:01:51.733 --> 00:01:54.169
在本单元 我们把这些各有所长的朋友称为弱学习器

00:01:54.170 --> 00:01:58.144
而把最终的超级聪明朋友称为强学习器

00:01:58.144 --> 00:02:01.640
这些弱学习器不一定弱  我们只是

00:02:01.640 --> 00:02:05.305
用这个词来表示它们  因为我们要通过组合弱学习器来创造一个更强大的学习器

00:02:05.305 --> 00:02:07.120
通常 我们要做的就是

00:02:07.120 --> 00:02:11.183
把很多弱学习器模型组合为一个更好的集成模型

00:02:11.383 --> 00:02:14.654
这些弱学习器模型不一定要非常好

00:02:14.655 --> 00:02:19.655
事实上 只要这些弱学习器做的比随机猜测好一点就行

